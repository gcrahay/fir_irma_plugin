function Result(t){function n(t){t&&this.setData(t)}function e(t){angular.extend(this,t)}return n.prototype={setData:e},n}function resultsManager(t,n,e,s){function a(t,n,e){function a(t){var n=o(t);e.resolve(n)}s.get({url:"/scans/"+t+"/results/"+n}).then(a)}function o(t){return new e(t)}function r(e,s){n.info("Retrieve result");var o=t.defer();return a(e,s,o),o.promise}return{getResult:r}}function dataservice(t){function n(n,e,s,a){function o(t){return t}return t.get({url:"/search/files?"+n+"="+e+"&offset="+s+"&limit="+a}).then(o)}return{searchFiles:n}}!function(){"use strict";function t(t,n,e){function s(){e.newScan()}function a(){e.noActiveProbes()?n.add({standard:"noProbes"}):(e.lastAction="startUpload",t.$emit("startUpload"))}var o=this;o.start=a,s()}angular.module("irma").controller("SelectionCtrl",t),t.$inject=["$scope","alerts","state"]}(),function(){var t=["$scope","state"],n=function(n,e){for(var s=0;s<t.length;s++)this[t[s]]=arguments[s];this.state.scan&&"upload"===this.state.status||this.state.goTo("selection"),this.$scope.cancel=this.cancel.bind(this)};n.prototype.cancel=function(){this.state.lastAction="cancelUpload",this.$scope.$emit("cancelUpload")},n.$inject=t,angular.module("irma").controller("UploadCtrl",n)}(),function(){"use strict";function t(t,n,e,s,a){function o(){("scan"!==s.status||void 0===s.scan||s.scan.id!==n.scan)&&(s.newScan(n.scan),s.scan.updateScan())}function r(){s.lastAction="cancelScan",t.$emit("cancelScan")}function i(){s.newScan(),s.goTo("selection")}var c=this;c.scanStatusCodes=a.scanStatusCodes,c.cancel=r,c.newScan=i,o()}angular.module("irma").controller("ScanCtrl",t),t.$inject=["$scope","$routeParams","$location","state","constants"]}(),function(){"use strict";function t(t,n,e){function s(t,s){e.removeAll(),"undefined"==typeof a.searchedStr?t.resolve([]):(a.searchedStr!==a.searchedPreviousStr&&(a.searchedPreviousStr=a.searchedStr,s.page(1)),n.searchFiles(a.searchedType,a.searchedStr,(s.page()-1)*s.count(),s.count()).then(function(n){s.total(n.total),t.resolve(n.items)}))}var a=this;a.searchedStr=void 0,a.searchedPreviousStr=void 0,a.searchedType="name",a.tableParams=new t({page:1,count:25},{total:0,getData:s})}angular.module("irma").controller("SearchCtrl",t),t.$inject=["ngTableParams","dataservice","alerts"]}(),function(){"use strict";function t(t,n,e){function s(){"results"!==e.status&&(e.newScan(n.scan),e.scan.getResults())}function a(){e.newScan(),e.goTo("selection")}var o=this;o.newScan=a,s()}angular.module("irma").controller("ResultsCtrl",t),t.$inject=["$scope","$routeParams","state"]}(),function(){"use strict";function t(t,n,e,s,a){function o(){r()}function r(){s.scan||s.newScan(e.scanId),a.getResult(e.scanId,e.fileIdx).then(function(t){i.results=t})}var i=this;i.results=void 0,o()}angular.module("irma").controller("DetailsCtrl",t),t.$inject=["$rootScope","$scope","$routeParams","state","resultsManager"]}(),function(){var t=["$scope","state"],n=function(n,e){for(var s=0;s<t.length;s++)this[t[s]]=arguments[s]};n.$inject=t,angular.module("irma").controller("MaintenanceCtrl",n)}(),function(){var t=["alerts"],n=function(t){return{restrict:"E",template:'<div class="alerts"><ul class="list-unstyled"><li class="alert-{{alert.type}}" ng-repeat="alert in alerts" ng-click="dismiss(alert)" ng-bind-html="alert.message"></li></ul></div>',link:function(n,e,s){n.alerts=t.list(),n.dismiss=function(n){t.remove(n)}}}};n.$inject=t,angular.module("irma").directive("alerts",n)}(),function(){var t=[],n=function(){return{link:function(t,n,e){n.click(function(){angular.element("#file-container").click()})}}};n.$inject=t,angular.module("irma").directive("fileTrigger",n)}(),function(){var t=[],n=function(){return{restrict:"A",scope:{state:"=booleanDisplay",color:"@",text:"@"},transclude:!0,template:"<span class=\"glyphicon glyphicon-{{(state)? 'ok': 'remove'}}\"style=\"color: {{(color)? color: (state)? '#5cb85c': '#d9534f'}}\"></span> <span style=\"color: {{(color)? color: (state)? '#5cb85c': '#d9534f'}}\" ng-transclude></span>"}};n.$inject=t,angular.module("irma").directive("booleanDisplay",n)}(),function(){var t=["$document","$window"],n=function(t,n){return{link:function(n,e,s){function a(n){n.keyCode===o[r++]?r===o.length&&(angular.element(t).unbind("keydown",a),angular.element("body").append('<script src="resources/ponies.js" id="browser-ponies-script"></script><script type="text/javascript">/* <![CDATA[ */ setTimeout(function(){ (function (cfg) {BrowserPonies.setBaseUrl(cfg.baseurl);BrowserPonies.loadConfig(BrowserPoniesBaseConfig);BrowserPonies.loadConfig(cfg);})({"baseurl":"http://panzi.github.io/Browser-Ponies/","fadeDuration":500,"volume":1,"fps":25,"speed":3,"audioEnabled":false,"showFps":false,"showLoadProgress":true,"dontSpeak":true,"spawn":{"applejack":1,"fluttershy":1,"pinkie pie":1,"rainbow dash":1,"rarity":1,"twilight sparkle":1},"autostart":true}); },1000); /* ]]> */</script>')):r=0}var o=[38,38,40,40,37,39,37,39,66,65],r=0;angular.element(t).keydown(a)}}};n.$inject=t,angular.module("irma").directive("konami",n)}(),function(){"use strict";function t(t,n,e,s,a,o){function r(t){this.id=t,this.state=void 0,this.api=a,this.task=void 0,this.base=void 0,this.uploader=n.create(),this.status=o.scanStatusCodes.STOPPED,this.results=void 0,this.scanProgress={progress:0,total:0,successful:0,finished:0},this.uploader.bind("error",this.errorUpload.bind(this)),this.uploader.bind("completeall",this.doneUpload.bind(this))}function i(t){this.state=t}function c(){return this.uploader.queue.length>0}function u(t,n){return 0===n.status||"0"===n.status?{title:t,content:"File clean"}:1===n.status||"1"===n.status?{title:t,content:"File compromised"}:"loading"===n.status?{title:t,content:"Waiting for response"}:{title:t,content:"An error occured"}}function l(){this.api.scan.createNew().then(function(t){this.id=t.id;var n=this.uploader.getNotUploadedItems();_.each(n,function(t){t.url=this.api.scan.getAddUrl(this)}.bind(this)),s.info("Upload has started"),this.uploader.uploadAll()}.bind(this))}function d(){s.info("Upload was cancelled"),this.uploader.cancelAll()}function f(){t.$broadcast("errorUpload")}function p(n,e){_.find(e,function(t){return!t.isSuccess||200!==t._xhr.status})?this.errorUpload():t.$broadcast("successUpload")}function g(){var t=this.state.getLaunchParams();s.info("Scan was launched"),this.status=o.scanStatusCodes.STARTED,this.api.scan.launch(this,t).then(function(t){this.updateScan()}.bind(this))}function h(){s.info("Scan was cancelled"),e.cancel(this.task),this.id&&this.api.scan.cancel(this)}function m(){this.api.scan.getInfos(this).then(function(n){this.setProgress(n.probes_total,n.probes_finished),this.results=n.results,50!==n.status?(this.status=o.scanStatusCodes.RUNNING,this.task=e(this.updateScan.bind(this),o.refresh)):(s.info("Scan was successful"),t.$broadcast("successScan"),this.status=o.scanStatusCodes.FINISHED)}.bind(this),function(t){this.task=e(this.updateScan.bind(this),o.refresh)}.bind(this))}function v(t,n){this.scanProgress={progress:Math.round(100*n/t),total:t,successful:n,finished:n}}function $(){return s.info("Updating results"),this.api.scan.getResults(this).then(function(t){this.results=t}.bind(this),function(n){t.$broadcast("errorResults",n)}.bind(this))}function b(t){return s.info("Retrieve file result "+t),a.scan.getResult(this,t)}return r.prototype={setState:i,hasFiles:c,getPopover:u,startUpload:l,cancelUpload:d,errorUpload:f,doneUpload:p,startScan:g,cancelScan:h,updateScan:m,setProgress:v,getResults:$,getResult:b},r}angular.module("irma").factory("scanModel",t),t.$inject=["$rootScope","$fileUploader","$timeout","$log","api","constants"]}(),angular.module("irma").factory("Result",Result),Result.$inject=["$http"],angular.module("irma").factory("resultsManager",resultsManager),resultsManager.$inject=["$q","$log","Result","bridge"],function(){"use strict";function t(t,n,e,s,a){function o(o){var r=n.defer();return t.get(i.rootUrl+o.url,{params:o.payload}).then(function(t){e(function(){r.resolve(t.data)},a.fakeDelay)},function(t){o.noAlerts||("api_error"!==t.data.type?s.add({standard:"apiErrorWithMsg",apiMsg:t.data.message}):s.add({standard:"apiError"})),e(function(){r.reject(t.data)},a.fakeDelay)}),r.promise}function r(o){var r=n.defer();return t.post(i.rootUrl+o.url,o.payload).then(function(t){e(function(){r.resolve(t.data)},a.fakeDelay)},function(t){o.noAlerts||("api_error"!==t.data.type?s.add({standard:"apiErrorWithMsg",apiMsg:t.data.message}):s.add({standard:"apiError"})),e(function(){r.reject(t.data)},a.fakeDelay)}),r.promise}var i=this;i.rootUrl=a.baseApi,i.get=o,i.post=r}t.$inject=["$http","$q","$timeout","alerts","constants"],angular.module("irma").service("bridge",t)}(),function(){"use strict";function t(t,n,e,s,a,o,r,i,c,u){function l(){n.state=y,y.loadProbes()}function d(t,n){y.status=t,s.path(c.baseUi+t+(n?"/"+n:""))}function f(){var t={};return y.settings.force&&(t.force=!0),_.find(y.probes,{active:!1})&&(t.probes=_.pluck(_.filter(y.probes,{active:!0}),"name").join(",")),t}function p(t){y.scan=new u(t),y.scan.setState(y)}function g(){return y.scan?y.scan.results?_.size(y.scan.results):y.scan.uploader.queue.length:0}function h(){return i.getProbes().then(function(t){t.total>0?_.forEach(t.data,function(t){y.probes.push({name:t,active:!0,tag:"Gentille",version:"No version information available"})}):n.$broadcast("maintenance")},function(){n.$broadcast("maintenance")})}function m(){return!_.find(y.probes,"active")}function v(t){return t.probes?t.probes:void o.info("No probes")}function $(){return i.ping().then(function(){y.settings.maintenance=!1,y.settings.loading=!1},function(){y.settings.loading=!1})}function b(){var n=t.defer();return y.settings.maintenance?y.checkForMaintenance().then(function(){n.resolve()},function(){n.reject(),y.goTo("maintenance")}):n.resolve(),n.promise}function S(){var n=t.defer();return y.settings.maintenance?y.settings.maintenance&&!y.settings.loading?n.resolve():y.checkForMaintenance().then(function(){n.reject(),y.goTo("selection")},function(){n.resolve()}):(n.reject(),y.goTo("selection")),n.promise}var y=this;y.goTo=d,y.getLaunchParams=f,y.newScan=p,y.nbFiles=g,y.loadProbes=h,y.noActiveProbes=m,y.probesForScan=v,y.checkForMaintenance=$,y.pingApi=b,y.noPingApi=S,y.scan=void 0,y.location=void 0,y.status=void 0,y.lastAction=void 0,y.probes=[],y.settings={force:!0,maintenance:!0,loading:!0},l(),n.$on("$routeChangeStart",function(t,n,e){r.removeAll(),o.debug("route change started from "+e.originalPath+" to "+n.originalPath)}),n.$on("$routeChangeSuccess",function(t,n){o.debug("route change success to "+n.originalPath),y.location=n.location}),n.$on("$routeChangeError",function(t,n){o.debug("route change error to "+n.originalPath)}),n.$on("startUpload",function(){o.debug("Start upload"),r.add({standard:"uploadStart"}),y.scan.startUpload(),y.goTo("upload")}),n.$on("cancelUpload",function(){o.debug("Cancel upload"),r.add({standard:"uploadCancel"}),y.goTo("selection"),y.scan.cancelUpload()}),n.$on("successUpload",function(){o.info("Upload was successful"),"startUpload"===y.lastAction&&(r.add({standard:"uploadSuccess"}),n.$broadcast("startScan"))}),n.$on("errorUpload",function(t,n){o.info("Upload encountered an error"),y.goTo("selection"),r.add({standard:"apiErrorWithMsg",apiMsg:n})}),n.$on("startScan",function(){a(function(){"startUpload"===y.lastAction?(r.add({standard:"scanStart"}),y.scan.startScan(),y.goTo("scan",y.scan.id)):n.$broadcast("cancelScan")},c.speed)}),n.$on("cancelScan",function(){r.add({standard:"scanCancel"}),y.goTo("selection"),y.scan.cancelScan()}),n.$on("successScan",function(){r.add({standard:"scanSuccess"})}),n.$on("errorScan",function(){o.info("Error during scan…")}),n.$on("newScan",function(){o.info("New scan launched")}),n.$on("errorResults",function(t,n){y.goTo("selection")}),n.$on("maintenance",function(){y.settings.maintenance=!0,y.goTo("maintenance")})}angular.module("irma").service("state",t),t.$inject=["$q","$rootScope","$route","$location","$timeout","$log","alerts","api","constants","scanModel"]}(),function(){"use strict";function t(t){function n(n){(void 0===n.dismiss||n.dismiss!==!1)&&(n.dismiss=n.dismiss!==parseInt(n.dismiss)?4e3:parseInt(n.dismiss),t(function(){s(n)},n.dismiss))}function e(t){t.standard&&i[t.standard]&&(t=_.extend(t,i[t.standard]),t.apiMsg&&(t.message+=t.apiMsg)),t.standard&&!i[t.standard]&&(t={message:"<strong>Missing alert:</strong> "+t.standard,type:"warning",dismiss:5e3}),-1===["info","warning","success","danger"].indexOf(t.type)&&(t.type="info"),"debug"!==t.status&&(r.push(t),n(t))}function s(t){var n=r.indexOf(t);-1!==n&&r.splice(n,1)}function a(){_(r).map(function(t){s(t)})}function o(){return r}var r=[],i={uploadStart:{message:"<strong>Info: </strong> The upload has started",type:"info",dismiss:3e3,status:"debug"},uploadCancel:{message:"<strong>Info: </strong> The upload was cancelled",type:"info",dismiss:3e3,status:"debug"},uploadSuccess:{message:"<strong>Info: </strong> The upload was successful",type:"info",dismiss:3e3,status:"debug"},uploadError:{message:"<strong>Info: </strong> The upload encountered errors. Please retry later.",type:"danger",dismiss:!1},scanStart:{message:"<strong>Info: </strong> The scan has started",type:"info",dismiss:3e3,status:"debug"},scanCancel:{message:"<strong>Info: </strong> The scan was cancelled",type:"info",dismiss:3e3,status:"debug"},scanSuccess:{message:"<strong>Info: </strong> The scan was successful",type:"info",dismiss:3e3,status:"debug"},apiError:{message:"<strong>Error:</strong> An error occured",type:"danger",dismiss:!1},apiErrorWithMsg:{message:"<strong>Api Error:</strong> ",type:"danger",dismiss:!1}},c={add:e,autoDismiss:n,list:o,remove:s,removeAll:a};return c}angular.module("irma").factory("alerts",t),t.$inject=["$timeout"]}(),function(){"use strict";function t(t,n){function e(){return n.get({url:"/probes",noAlerts:!0})}function s(){return n.get({url:"/probes"})}function a(){return n.post({url:"/scans"})}function o(t){return n.rootUrl+"/scans/"+t.id+"/files"}function r(t,e){return n.post({url:"/scans/"+t.id+"/launch",payload:e})}function i(t,e){return n.post({url:"/scans/"+t.id+"/cancel",payload:e})}function c(t){return n.get({url:"/scans/"+t.id})}function u(t){return n.get({url:"/scans/"+t.id+"/results"})}var l=this;l.ping=e,l.getProbes=s,l.scan={createNew:a,getAddUrl:o,launch:r,cancel:i,getInfos:c,getResults:u}}angular.module("irma").service("api",t),t.$inject=["$q","bridge"]}(),angular.module("irma").factory("dataservice",dataservice),dataservice.$inject=["bridge"];